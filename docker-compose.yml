version: "3.9"

services:
  backend:
    build:
      context: .
      args:
        - DEV=true
    ports:
      - "8000:8000"
    volumes:
      - ./crypto.memint.backtest:/crypto.memint.backtest
      - dev-static-data:/vol/web
    command: >
      sh -c "python manage.py wait_for_db &&
             python manage.py migrate &&
             python manage.py runserver 0.0.0.0:8000"
    environment:
      - DB_HOST=db
      - DB_NAME=dbdev
      - DB_USER=usrdev
      - DB_PASSWD=passwd
      - DEBUG=1
    depends_on:
      - db
      - redis

  db:
    image: postgres:13-alpine
    volumes:
      - db-dev-data:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=dbdev
      - POSTGRES_USER=usrdev
      - POSTGRES_PASSWORD=passwd

  celery:
    build:
      context: .
      args:
        - DEV=true
    command: >
      sh -c "celery -A backend worker --loglevel=info"
    depends_on:
      - redis
      - backend
    environment:
      - DB_HOST=db
      - DB_NAME=dbdev
      - DB_USER=usrdev
      - DB_PASSWD=passwd
    volumes:
      - ./crypto.memint.backtest:/crypto.memint.backtest

  celery-beat:
    build:
      context: .
      args:
        - DEV=true
    command: >
      sh -c "celery -A backend beat --loglevel=info"
    depends_on:
      - redis
      - backend
    environment:
      - DB_HOST=db
      - DB_NAME=dbdev
      - DB_USER=usrdev
      - DB_PASSWD=passwd
    volumes:
      - ./crypto.memint.backtest:/crypto.memint.backtest

  redis:
    image: "redis:alpine"
    ports:
      - "6379:6379"

volumes:
  db-dev-data:
  dev-static-data:
