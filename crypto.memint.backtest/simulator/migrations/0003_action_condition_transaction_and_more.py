# Generated by Django 4.2.14 on 2024-07-30 17:42

import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ("simulator", "0002_remove_strategy_user"),
    ]

    operations = [
        migrations.CreateModel(
            name="Action",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "action_type",
                    models.CharField(
                        choices=[("BUY", "Buy"), ("SELL", "Sell")], max_length=10
                    ),
                ),
                ("amount", models.FloatField()),
            ],
        ),
        migrations.CreateModel(
            name="Condition",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "indicator",
                    models.CharField(
                        choices=[("MACD", "MACD"), ("PRICE", "Price"), ("RSI", "RSI")],
                        max_length=50,
                    ),
                ),
                (
                    "operator",
                    models.CharField(
                        choices=[
                            (">=", "Greater than or equal to"),
                            ("<=", "Less than or equal to"),
                            ("==", "Equal to"),
                            ("<", "Less than"),
                            (">", "Greater than"),
                        ],
                        max_length=2,
                    ),
                ),
                ("value", models.FloatField()),
                (
                    "join_operator",
                    models.CharField(
                        choices=[("AND", "AND"), ("OR", "OR")],
                        default="AND",
                        max_length=3,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Transaction",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "transaction_type",
                    models.CharField(
                        choices=[("BUY", "Buy"), ("SELL", "Sell")], max_length=10
                    ),
                ),
                ("date", models.DateTimeField()),
                ("amount", models.FloatField()),
                ("price", models.FloatField()),
                ("total", models.FloatField()),
            ],
        ),
        migrations.RemoveField(
            model_name="simulation",
            name="final_capital",
        ),
        migrations.RemoveField(
            model_name="simulation",
            name="initial_capital",
        ),
        migrations.RemoveField(
            model_name="simulation",
            name="performance_metrics",
        ),
        migrations.RemoveField(
            model_name="simulation",
            name="profit_loss",
        ),
        migrations.RemoveField(
            model_name="simulation",
            name="symbols",
        ),
        migrations.RemoveField(
            model_name="strategy",
            name="strategy_definition",
        ),
        migrations.AddField(
            model_name="simulation",
            name="created_at",
            field=models.DateTimeField(
                auto_now_add=True, default=django.utils.timezone.now
            ),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name="simulation",
            name="final_balance",
            field=models.FloatField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name="simulation",
            name="initial_balance",
            field=models.FloatField(default=2.0),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name="simulation",
            name="max_drawdown",
            field=models.FloatField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name="simulation",
            name="roi",
            field=models.FloatField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name="simulation",
            name="symbol",
            field=models.OneToOneField(
                default=1,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="simulations",
                to="simulator.symbol",
            ),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name="strategy",
            name="parameters",
            field=models.JSONField(default=dict),
        ),
        migrations.AlterField(
            model_name="strategy",
            name="created_at",
            field=models.DateTimeField(auto_now_add=True),
        ),
        migrations.AlterField(
            model_name="strategy",
            name="description",
            field=models.TextField(blank=True, null=True),
        ),
        migrations.AlterField(
            model_name="strategy",
            name="updated_at",
            field=models.DateTimeField(auto_now=True),
        ),
        migrations.AddField(
            model_name="simulation",
            name="transactions",
            field=models.ManyToManyField(to="simulator.transaction"),
        ),
        migrations.AddField(
            model_name="strategy",
            name="actions",
            field=models.ManyToManyField(to="simulator.action"),
        ),
        migrations.AddField(
            model_name="strategy",
            name="conditions",
            field=models.ManyToManyField(to="simulator.condition"),
        ),
    ]
